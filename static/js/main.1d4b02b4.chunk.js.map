{"version":3,"sources":["recipe.module.css","assets/logo.svg","Recipe.js","Header.js","App.js","assets/stuff.js","index.js"],"names":["module","exports","Recipe","title","calories","image","ingredients","className","style","recipe","map","text","src","alt","Header","logo","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","document","useEffect","getRecipe","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","key","label","ReactDOM","render","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCD1DD,EAAOC,QAAU,IAA0B,kC,0NCkB5BC,EAfA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,yBAAKC,UAAWC,IAAMC,QACpB,4BAAKN,GACL,4BACGG,EAAYI,KAAI,SAACJ,GAAD,OACf,4BAAKA,EAAYK,UAGrB,2BAAIP,EAAJ,aACA,yBAAKQ,IAAKP,EAAOQ,IAAI,GAAGN,UAAWC,IAAMH,U,8BCHhCS,EANA,kBACb,4BAAQP,UAAU,UAChB,yBAAKK,IAAKG,IAAMF,IAAI,cAAcN,UAAU,UC8DjCS,EA9DH,WACV,IADgB,EAIcC,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKYF,mBAAS,IALrB,mBAKTG,EALS,KAKDC,EALC,OAMUJ,mBAAS,IANnB,mBAMTK,EANS,KAMFC,EANE,KAOhBC,SAASrB,MAAQ,aAEjBsB,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OACSN,EADT,mBCpBd,WDoBc,oBCnBb,qCDkBC,cACVO,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAKhBZ,EAAWY,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAND,2CAAH,qDAmBf,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,0BAAMA,UAAU,cAAc4B,SAThB,SAACC,GACjBA,EAAEC,iBACFd,EAASH,GACTC,EAAU,MAON,2BACEiB,KAAK,OACL/B,UAAU,aACVgC,MAAOnB,EACPoB,SAlBa,SAACJ,GACpBf,EAAUe,EAAEK,OAAOF,QAkBbG,YAAY,uBAEd,4BAAQJ,KAAK,SAAS/B,UAAU,iBAAhC,WAIF,yBAAKA,UAAU,UACZW,EAAQR,KAAI,SAACQ,GAAD,OACX,kBAAC,EAAD,CACEyB,IAAKzB,EAAQT,OAAOmC,MACpBzC,MAAOe,EAAQT,OAAOmC,MACtBxC,SAAUc,EAAQT,OAAOL,SACzBC,MAAOa,EAAQT,OAAOJ,MACtBC,YAAaY,EAAQT,OAAOH,oBEvDxCuC,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,W","file":"static/js/main.1d4b02b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3GrU5\",\"image\":\"recipe_image__ZTgoL\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5e9c7b49.svg\";","import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <h1>{title}</h1>\r\n      <ol>\r\n        {ingredients.map((ingredients) => (\r\n          <li>{ingredients.text}</li>\r\n        ))}\r\n      </ol>\r\n      <p>{calories} Calories</p>\r\n      <img src={image} alt=\"\" className={style.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"./assets/logo.svg\";\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <img src={logo} alt=\"Recipes Now\" className=\"pic\" />\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport { id, key } from \"./assets/stuff\";\n\nconst App = () => {\n  const APP_ID = id;\n  const APP_key = key;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  document.title = \"Recipe App\";\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  const getRecipe = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_key}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          value={search}\n          onChange={updateSearch}\n          placeholder=\"Search for recipes\"\n        />\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipe\">\n        {recipes.map((recipes) => (\n          <Recipe\n            key={recipes.recipe.label}\n            title={recipes.recipe.label}\n            calories={recipes.recipe.calories}\n            image={recipes.recipe.image}\n            ingredients={recipes.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export const id = \"6deca255\";\r\nexport const key = \"5bd02978dcde781edd2db5c2d2f49da3\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}